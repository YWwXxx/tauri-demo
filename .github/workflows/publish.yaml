name: "publish"
on:
  push:
    branches:
      - main

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    outputs:
      artifact_paths: ${{ steps.myAction.outputs.artifactPaths }}
      filtered_paths: ${{ steps.sigAction.outputs.filteredPaths }}

    steps:
      - name: Set Locale to Chinese
        run: echo "LANG=zh_CN.UTF-8" >> $GITHUB_ENV
      - uses: actions/checkout@v4
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
      - name: install frontend dependencies
        run: yarn install # change this to npm or pnpm depending on which one you use
      - uses: tauri-apps/tauri-action@v0
        id: myAction
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: "App0.0 v__VERSION__"
          releaseBody: "更新测试"
          releaseDraft: true
          prerelease: false
          artifact_paths: ${{ steps.myAction.outputs.artifactPaths }}

      - name: Get Action Output(macos only)
        id: sigAction
        if: matrix.platform == 'macos-latest'
        run: |
          output_path='${{ steps.myAction.outputs.artifactPaths }}'
          filtered_paths=$(echo "$output_path" | jq -r '.[] | select(endswith(".sig"))')
          echo "Filtered Output Paths: $filtered_paths"
          echo "::set-output name=filtered_paths::${filtered_paths}"

      - uses: actions/checkout@v2
      - name: Commit and Push Changes
        if: matrix.platform == 'macos-latest'
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.email "actions@example.com"
          git config user.name "GitHub Actions"

          git clone https://github.com/YWwXxx/release-test.git

          cd release-test

          filtered_paths="${{ needs.sigAction.outputs.filtered_paths }}"

          cp $filtered_paths .

          git add .
          git commit -m "Add filtered paths"

          git remote set-url origin https://github.com/YWwXxx/release-test.git

          git push -u origin main

      - name: Get Action Output(windows only)
        if: matrix.platform == 'windows-latest'
        run: |
          $output_path = '${{ steps.myAction.outputs.artifactPaths }}'
          $paths = $output_path | ConvertFrom-Json
          $sig_paths = $paths | Where-Object { $_ -match '\.sig$' }
          $sig_paths
